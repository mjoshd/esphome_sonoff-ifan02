# https://esphome.io/guides/configuration-types.html#substitutions
# https://esphome.io/guides/faq.html?highlight=secret#how-do-i-use-my-home-assistant-secrets-yaml
substitutions:  
  device_name: josh_ifan02
  friendly_name: Josh Ceiling
  wifi_ssid: !secret wifi_ssid_not
  wifi_password: !secret wifi_password_not
  # static_ip: !secret josh_ifan02_ip
  gateway: !secret wifi_gateway_not
  subnet: !secret wifi_subnet_not
  dns1: !secret wifi_dns1_not
  ap_password: !secret esphome_ap_password
  api_password: !secret esphome_api_password
  ota_password: !secret esphome_ota_password
### shouldn't need to change anything below this line ###



esphome:
  # https://esphome.io/components/esphome
  name: ${device_name}
  platform: ESP8266
  board: esp8285
  on_boot:
    # turn off the light as early as possible
    priority: 225
    then:
      - light.turn_off: ifan02_light



# https://esphome.io/components/wifi
wifi:
  ssid: "${wifi_ssid}"
  password: "${wifi_password}"
  # manual_ip:
  #   static_ip: "${static_ip}"
  #   gateway: "${gateway}"
  #   subnet: "${subnet}"
  #   dns1: "${dns1}"
  ap:
    ssid: "${friendly_name} E-AP"
    password: "${ap_password}"



# https://esphome.io/components/captive_portal.html
captive_portal:



# # https://esphome.io/components/web_server.html
# web_server:
#   port: 80



# https://esphome.io/components/logger
logger:
  baud_rate: 0



# https://esphome.io/components/api
api:
  password: "${api_password}"
  # reboot_timeout: ${reboot_timeout}



# https://esphome.io/components/ota
ota:
  password: "${ota_password}"



# https://esphome.io/components/binary_sensor/index.html
binary_sensor:
  # https://esphome.io/components/binary_sensor/gpio.html
  - platform: gpio
    id: vbutton_light
    pin:
      number: GPIO0
      inverted: true
    on_press:
      then:
        - light.toggle: ifan02_light

  - platform: gpio
    id: vbutton_1
    pin:
      number: GPIO9
      inverted: true
    on_press:
      then:
        - switch.toggle: fan_relay1
        - lambda: |-
            id(update_ha_frontend).execute();

  - platform: gpio
    id: vbutton_2
    pin:
      number: GPIO10
      inverted: true
    on_press:
      then:
        - switch.toggle: fan_relay2
        - lambda: |-
            id(update_ha_frontend).execute();

  - platform: gpio
    id: vbutton_3
    pin:
      number: GPIO14
      inverted: true
    on_press:
      then:
        - switch.toggle: fan_relay3
        - lambda: |-
            id(update_ha_frontend).execute();



# https://esphome.io/components/fan/index.html
fan:
  # https://esphome.io/components/fan/speed.html
  - platform: speed
    output: output_fan
    id: ifan02_fan
    name: ${friendly_name} Fan
    speed_count: 3



# https://esphome.io/components/light/index.html
light:
  # https://esphome.io/components/light/binary.html
  - platform: binary
    name: ${friendly_name} Light
    output: output_light
    id: ifan02_light



# https://esphome.io/components/output/index.html
output:
  # https://esphome.io/components/output/gpio.html
  - platform: gpio
    pin: GPIO12
    id: output_light

  # https://esphome.io/components/output/template.html
  - platform: template
    id: output_fan
    type: float
    write_action:
      lambda: !lambda |-
        if (id(ifan02_fan).state == 0) {
          // off
          id(fan_relay1).turn_off();
          id(fan_relay2).turn_off();
          id(fan_relay3).turn_off();
        } else if (id(ifan02_fan).state == 1) {
            if (id(ifan02_fan).speed == 1) {
            // low
            id(fan_relay1).turn_on();
            id(fan_relay2).turn_off();
            id(fan_relay3).turn_off();
          } else if (id(ifan02_fan).speed == 2) {
            // medium
            id(fan_relay1).turn_on();
            id(fan_relay2).turn_on();
            id(fan_relay3).turn_off();
          } else if (id(ifan02_fan).speed == 3) {
            // high
            id(fan_relay1).turn_on();
            id(fan_relay2).turn_off();
            id(fan_relay3).turn_on();
          }
        }
        ESP_LOGD("id(ifan02_fan).state ", "%d", id(ifan02_fan).state);
        ESP_LOGD("id(ifan02_fan).speed ", "%d", id(ifan02_fan).speed);



# https://esphome.io/components/switch/index.html
switch:
  # https://esphome.io/components/switch/gpio.html
  - platform: gpio
    pin: GPIO5
    id: fan_relay1

  - platform: gpio
    pin: GPIO4
    id: fan_relay2

  - platform: gpio
    pin: GPIO15
    id: fan_relay3



# https://esphome.io/guides/automations.html?highlight=script#script-execute-action
script:
  # https://esphome.io/guides/automations.html
  - id: update_ha_frontend
    then:
      - delay: 200ms
      - if:
          condition:
            lambda: |-
              return (id(fan_relay1).state == false && id(fan_relay2).state == false && id(fan_relay3).state == false);
          then:
            - fan.turn_off: ifan02_fan
      - if:
          condition:
            lambda: |-
              return (id(fan_relay1).state == true && id(fan_relay2).state == false && id(fan_relay3).state == false);
          then:
            - fan.turn_on:
                id: ifan02_fan
                speed: 1
      - if:
          condition:
            lambda: |-
              return (id(fan_relay1).state == true && id(fan_relay2).state == true && id(fan_relay3).state == false);
          then:
            - fan.turn_on:
                id: ifan02_fan
                speed: 2
      - if:
          condition:
            lambda: |-
              return (id(fan_relay1).state == true && id(fan_relay2).state == false && id(fan_relay3).state == true);
          then:
            - fan.turn_on:
                id: ifan02_fan
                speed: 3
